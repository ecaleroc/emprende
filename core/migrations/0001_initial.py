# Generated by Django 4.2 on 2025-06-06 19:21

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Abogado',
            fields=[
                ('idabogado', models.AutoField(db_column='IDABOGADO', primary_key=True, serialize=False)),
                ('cal', models.IntegerField(blank=True, db_column='CAL', null=True)),
            ],
            options={
                'db_table': 'ABOGADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('idactividad', models.AutoField(db_column='IDACTIVIDAD', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('fecha_inicio', models.DateField(blank=True, db_column='FECHA_INICIO', null=True)),
                ('hora_inicio', models.CharField(blank=True, db_column='HORA_INICIO', max_length=8, null=True)),
                ('fecha_fin', models.DateField(blank=True, db_column='FECHA_FIN', null=True)),
                ('hora_fin', models.CharField(blank=True, db_column='HORA_FIN', max_length=8, null=True)),
                ('duracion', models.IntegerField(blank=True, db_column='DURACION', db_comment='Valor de la duraci¾n, HR:cantidad de horas, DI:dias, SE:semanas, ME:meses,AN: a±os', null=True)),
                ('tipo_duracion', models.CharField(blank=True, db_column='TIPO_DURACION', db_comment='Unidad de medida duraci¾n, HR:cantidad de horas, DI:dias, SE:semanas, ME:meses,AN: a±os', max_length=2, null=True)),
            ],
            options={
                'db_table': 'ACTIVIDAD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActividadEspacio',
            fields=[
                ('idactespacio', models.AutoField(db_column='IDACTESPACIO', primary_key=True, serialize=False)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='R:RESERVADO/O:OCUPADO/L:LIBRE', max_length=1, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('hora_ini', models.CharField(blank=True, db_column='HORA_INI', max_length=8, null=True)),
                ('hora_fin', models.CharField(blank=True, db_column='HORA_FIN', max_length=8, null=True)),
            ],
            options={
                'db_table': 'ACTIVIDAD_ESPACIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alternativa',
            fields=[
                ('idalternativa', models.AutoField(db_column='IDALTERNATIVA', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=2, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('detalle', models.CharField(blank=True, db_column='DETALLE', max_length=250, null=True)),
                ('otros', models.CharField(blank=True, db_column='OTROS', db_comment='S:Si/N:NO', max_length=1, null=True)),
                ('orden', models.IntegerField(blank=True, db_column='ORDEN', null=True)),
            ],
            options={
                'db_table': 'ALTERNATIVA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('idarchivo', models.AutoField(db_column='IDARCHIVO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=255, null=True)),
                ('peso', models.FloatField(blank=True, db_column='PESO', null=True)),
                ('unidad', models.CharField(blank=True, db_column='UNIDAD', max_length=2, null=True)),
                ('formato', models.CharField(blank=True, db_column='FORMATO', max_length=55, null=True)),
                ('directorio', models.CharField(blank=True, db_column='DIRECTORIO', max_length=255, null=True)),
                ('nombre_encriptado', models.CharField(blank=True, db_column='NOMBRE_ENCRIPTADO', max_length=255, null=True)),
                ('usuario_creacion', models.IntegerField(blank=True, db_column='USUARIO_CREACION', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('archivable_id', models.IntegerField(blank=True, null=True)),
                ('archivable_type', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'ARCHIVO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AreaServicio',
            fields=[
                ('idareaservicio', models.AutoField(db_column='IDAREASERVICIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO/P:PENDIENTE', max_length=1, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=150, null=True)),
                ('icono', models.CharField(blank=True, db_column='ICONO', max_length=150, null=True)),
            ],
            options={
                'db_table': 'AREA_SERVICIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Asistencias',
            fields=[
                ('idasistencias', models.AutoField(db_column='IDASISTENCIAS', primary_key=True, serialize=False)),
                ('fecha_asistencia', models.DateField(blank=True, db_column='FECHA_ASISTENCIA', null=True)),
                ('aistencia', models.CharField(blank=True, db_column='AISTENCIA', max_length=1, null=True)),
                ('obs', models.CharField(blank=True, db_column='OBS', max_length=250, null=True)),
            ],
            options={
                'db_table': 'ASISTENCIAS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Caso',
            fields=[
                ('idcaso', models.AutoField(db_column='IDCASO', primary_key=True, serialize=False)),
                ('tipo_caso', models.IntegerField(blank=True, db_column='TIPO_CASO', db_comment='ACCIDENTE / EMERGENCIA / LIMPIEZA / ', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('estado_general', models.IntegerField(blank=True, db_column='ESTADO_GENERAL', null=True)),
                ('fecha_caso', models.DateTimeField(blank=True, db_column='FECHA_CASO', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
            ],
            options={
                'db_table': 'CASO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogoPlato',
            fields=[
                ('idcatalogo_plato', models.AutoField(db_column='IDCATALOGO_PLATO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=145, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=345, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
                ('idempresa', models.IntegerField(db_column='IDEMPRESA')),
            ],
            options={
                'db_table': 'CATALOGO_PLATO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatalogoTablas',
            fields=[
                ('idcatalogotablas', models.AutoField(db_column='IDCATALOGOTABLAS', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=245, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='A: Activo\nI: Inactivo', null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('abreviatura', models.CharField(blank=True, db_column='ABREVIATURA', max_length=10, null=True)),
            ],
            options={
                'db_table': 'CATALOGO_TABLAS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatServicio',
            fields=[
                ('idcatservicio', models.AutoField(db_column='IDCATSERVICIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
            ],
            options={
                'db_table': 'CAT_SERVICIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Censador',
            fields=[
                ('idcensador', models.AutoField(db_column='IDCENSADOR', db_comment='ID de la tabla CENSADOR.', primary_key=True, serialize=False)),
                ('casa_vecinal', models.CharField(blank=True, db_column='CASA_VECINAL', db_comment='Casa vecinal asignada al censador.', max_length=45, null=True)),
                ('sector', models.CharField(blank=True, db_column='SECTOR', db_comment='Sector asignado al censador.', max_length=45, null=True)),
                ('fecha_programada', models.DateField(blank=True, db_column='FECHA_PROGRAMADA', db_comment='Fecha programada en la que debe realizar el censo.', null=True)),
            ],
            options={
                'db_table': 'CENSADOR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CensoanemEtapa',
            fields=[
                ('idcensoetapa', models.AutoField(db_column='IDCENSOETAPA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('fecha_inicio', models.DateField(blank=True, db_column='FECHA_INICIO', null=True)),
                ('fecha_finalizacion', models.DateField(blank=True, db_column='FECHA_FINALIZACION', null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'CENSOANEM_ETAPA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CensoAnemia',
            fields=[
                ('idcensoanemia', models.AutoField(db_column='IDCENSOANEMIA', db_comment='ID del CENSO para control de ANEMIA.', primary_key=True, serialize=False)),
                ('fecha_censo', models.DateField(blank=True, db_column='FECHA_CENSO', db_comment='Fecha en la que se realiz¾ el CENSO.', null=True)),
                ('prestadora_salud', models.CharField(blank=True, db_column='PRESTADORA_SALUD', db_comment='Nombre de la Entidad (ESSALUD, MINSA, etc.) en la que se atendio el CENSADO.', max_length=45, null=True)),
                ('prestadora_direccion', models.CharField(blank=True, db_column='PRESTADORA_DIRECCION', max_length=200, null=True)),
                ('recibe_atencion', models.CharField(blank=True, db_column='RECIBE_ATENCION', db_comment='Si recibi¾ atenci¾n en el centro el valor serß SI, de lo contrario serß NO.', max_length=5, null=True)),
                ('recibe_aten_motivo', models.CharField(blank=True, db_column='RECIBE_ATEN_MOTIVO', db_comment='Raz¾n por la que no recibi¾ atenci¾n.', max_length=200, null=True)),
                ('suplementos', models.CharField(blank=True, db_column='SUPLEMENTOS', db_comment='Nombre de los suplementos para la anemia (Micronuetrientes, sulfato ferroso, etc.).', max_length=200, null=True)),
                ('programa_social', models.CharField(blank=True, db_column='PROGRAMA_SOCIAL', db_comment='Nombre del programa social en el que participa (vaso de leche, comedor, etc.).', max_length=200, null=True)),
                ('gest_edad_gestacional', models.IntegerField(blank=True, db_column='GEST_EDAD_GESTACIONAL', db_comment='Tiempo de gestaci¾n EN SEMANAS', null=True)),
                ('gest_tipoembarazo', models.CharField(blank=True, db_column='GEST_TIPOEMBARAZO', db_comment='Tipo de embarazo, NS:NO se sabe/UN: ·nico, ME: Mellizos, etc.\nSe va poner texto completo', max_length=20, null=True)),
                ('gest_numerohijos', models.IntegerField(blank=True, db_column='GEST_NUMEROHIJOS', db_comment='N·mero de hijos que espe Cantidad de hijos de la gestante, si los tuviera.', null=True)),
            ],
            options={
                'db_table': 'CENSO_ANEMIA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Centro',
            fields=[
                ('idcentro', models.AutoField(db_column='IDCENTRO', primary_key=True, serialize=False)),
                ('latitud', models.DecimalField(blank=True, db_column='LATITUD', decimal_places=2, max_digits=10, null=True)),
                ('longitud', models.DecimalField(blank=True, db_column='LONGITUD', decimal_places=2, max_digits=10, null=True)),
                ('casa_vecinal', models.CharField(blank=True, db_column='CASA_VECINAL', max_length=1, null=True)),
                ('sector', models.CharField(blank=True, db_column='SECTOR', max_length=2, null=True)),
                ('direccion', models.CharField(blank=True, db_column='DIRECCION', max_length=250, null=True)),
                ('ubigeo', models.CharField(blank=True, db_column='UBIGEO', max_length=6, null=True)),
                ('tipo_centro', models.CharField(blank=True, db_column='TIPO_CENTRO', db_comment='PZ:Parque zonal/LO:LOCAL/AG:Area geogrßfico/DG:Division geografica interna de Lima distrito', max_length=2, null=True)),
            ],
            options={
                'db_table': 'CENTRO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('idcliente', models.AutoField(db_column='IDCLIENTE', primary_key=True, serialize=False)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
                ('tipo_cliente', models.CharField(blank=True, db_column='TIPO_CLIENTE', max_length=1, null=True)),
                ('monto_ultima_compra', models.DecimalField(blank=True, db_column='MONTO_ULTIMA_COMPRA', decimal_places=0, max_digits=5, null=True)),
                ('cuenta_bancaria', models.IntegerField(blank=True, db_column='CUENTA_BANCARIA', null=True)),
                ('calificacion', models.DecimalField(blank=True, db_column='CALIFICACION', decimal_places=0, max_digits=2, null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('fecha_baja', models.DateTimeField(blank=True, db_column='FECHA_BAJA', null=True)),
                ('fecha_activacion', models.DateTimeField(blank=True, db_column='FECHA_ACTIVACION', null=True)),
                ('total_pedidos', models.IntegerField(blank=True, db_column='TOTAL_PEDIDOS', null=True)),
                ('total_atendidos', models.IntegerField(blank=True, db_column='TOTAL_ATENDIDOS', null=True)),
            ],
            options={
                'db_table': 'CLIENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Componente',
            fields=[
                ('idcomponente', models.AutoField(db_column='IDCOMPONENTE', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', db_comment='CABECERA/BANNER/CUERPO/PIE', max_length=255, null=True)),
                ('titulo', models.CharField(blank=True, db_column='TITULO', max_length=255, null=True)),
                ('resumen', models.TextField(blank=True, db_column='RESUMEN', null=True)),
                ('contenido', models.TextField(blank=True, db_column='CONTENIDO', null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('idusuariocreacion', models.IntegerField(blank=True, db_column='IDUSUARIOCREACION', null=True)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, db_column='FECHA_ACTUALIZACION', null=True)),
                ('idusuarioactualizacion', models.IntegerField(blank=True, db_column='IDUSUARIOACTUALIZACION', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='PUBLICADO/VISTAPREVIA/NO PUBLICADO', null=True)),
            ],
            options={
                'db_table': 'COMPONENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contenedor',
            fields=[
                ('idcontenedor', models.AutoField(db_column='IDCONTENEDOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=45, null=True)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=45, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
            ],
            options={
                'db_table': 'CONTENEDOR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Control',
            fields=[
                ('idcontrol', models.AutoField(db_column='IDCONTROL', primary_key=True, serialize=False)),
                ('puntocontrol', models.IntegerField(blank=True, db_column='PUNTOCONTROL', null=True)),
                ('responsable', models.IntegerField(db_column='RESPONSABLE')),
                ('fecha', models.DateTimeField(blank=True, db_column='FECHA', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('observacion', models.CharField(blank=True, db_column='OBSERVACION', max_length=255, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fotos', models.CharField(blank=True, db_column='FOTOS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'CONTROL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Convoy',
            fields=[
                ('idconvoy', models.AutoField(db_column='IDCONVOY', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=245, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fecha_salida', models.DateField(blank=True, db_column='FECHA_SALIDA', null=True)),
                ('fecha_llegada', models.DateField(blank=True, db_column='FECHA_LLEGADA', null=True)),
                ('offline', models.IntegerField(blank=True, db_column='OFFLINE', null=True)),
            ],
            options={
                'db_table': 'CONVOY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cotizacion',
            fields=[
                ('idcotizacion', models.AutoField(db_column='IDCOTIZACION', primary_key=True, serialize=False)),
                ('monto', models.CharField(blank=True, db_column='MONTO', max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=545, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='COTIZADO\nPEDIDO\n', max_length=2, null=True)),
            ],
            options={
                'db_table': 'COTIZACION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Denuncia',
            fields=[
                ('iddenuncia', models.AutoField(db_column='IDDENUNCIA', primary_key=True, serialize=False)),
                ('numero', models.CharField(blank=True, db_column='NUMERO', max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=145, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('estado_general', models.IntegerField(blank=True, db_column='ESTADO_GENERAL', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
            ],
            options={
                'db_table': 'DENUNCIA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('iddepartamento', models.CharField(db_column='IDDEPARTAMENTO', max_length=6, primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=145, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=2, null=True)),
            ],
            options={
                'db_table': 'DEPARTAMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Direccion',
            fields=[
                ('iddireccion', models.AutoField(db_column='IDDIRECCION', primary_key=True, serialize=False)),
                ('tipo', models.IntegerField(blank=True, db_column='TIPO', db_comment='DOMICILIO, TRABAJO, CASA-PLAYA, ETC', null=True)),
                ('tipo_zona', models.IntegerField(blank=True, db_column='TIPO_ZONA', db_comment='URBANIZACIËN / CONJ. HABITACIONAL / ETC.\n', null=True)),
                ('nombre_zona', models.CharField(blank=True, db_column='NOMBRE_ZONA', db_comment='LAS LOMAS / LAS VIÐAS / ETC.\n', max_length=245, null=True)),
                ('tipo_via', models.CharField(blank=True, db_column='TIPO_VIA', db_comment='AV / JIRON / PROLONGACIËN / CALLE / ETC.', max_length=245, null=True)),
                ('nomb_via', models.CharField(blank=True, db_column='NOMB_VIA', max_length=245, null=True)),
                ('tipo_exterior', models.CharField(blank=True, db_column='TIPO_EXTERIOR', db_comment='NRO, KM, MZ LT\n', max_length=45, null=True)),
                ('valor_exterior', models.CharField(blank=True, db_column='VALOR_EXTERIOR', max_length=45, null=True)),
                ('tipo_interior', models.CharField(blank=True, db_column='TIPO_INTERIOR', db_comment='DPT., HABITACION, INTERIOR\n', max_length=45, null=True)),
                ('valor_interior', models.CharField(blank=True, db_column='VALOR_INTERIOR', max_length=45, null=True)),
                ('piso', models.CharField(blank=True, db_column='PISO', max_length=45, null=True)),
                ('latitud', models.FloatField(blank=True, db_column='LATITUD', null=True)),
                ('longitud', models.FloatField(blank=True, db_column='LONGITUD', null=True)),
            ],
            options={
                'db_table': 'DIRECCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Directorio',
            fields=[
                ('iddirectorio', models.AutoField(db_column='IDDIRECTORIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_collation='latin1_swedish_ci', db_column='NOMBRE', max_length=45, null=True)),
                ('path', models.CharField(blank=True, db_column='PATH', max_length=255, null=True)),
                ('nivel', models.IntegerField(blank=True, db_column='NIVEL', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DIRECTORIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distrito',
            fields=[
                ('iddistrito', models.CharField(db_column='IDDISTRITO', max_length=6, primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=145, null=True)),
                ('iddepartamento', models.CharField(blank=True, db_column='IDDEPARTAMENTO', max_length=6, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'DISTRITO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Docadjunto',
            fields=[
                ('iddocadjunto', models.AutoField(db_column='IDDOCADJUNTO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=345, null=True)),
                ('urladjunto', models.CharField(blank=True, db_column='URLADJUNTO', max_length=745, null=True)),
                ('tamanio', models.FloatField(blank=True, db_column='TAMANIO', null=True)),
                ('formato', models.CharField(blank=True, db_column='FORMATO', max_length=85, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'DOCADJUNTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emparentado',
            fields=[
                ('idemparentado', models.AutoField(db_column='IDEMPARENTADO', primary_key=True, serialize=False)),
                ('tipo_relacion', models.CharField(blank=True, db_column='TIPO_RELACION', db_comment='padre, madre, tio, tia, tutor legal, c¾nyuge, etc...', max_length=10, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('creador_registro', models.CharField(db_column='CREADOR_REGISTRO', max_length=10)),
                ('systema', models.CharField(db_column='SYSTEMA', max_length=10)),
            ],
            options={
                'db_table': 'EMPARENTADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('idempresa', models.AutoField(db_column='IDEMPRESA', primary_key=True, serialize=False)),
                ('rubro', models.CharField(blank=True, db_column='RUBRO', max_length=145, null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=445, null=True)),
                ('tipo_comercio', models.IntegerField(blank=True, db_column='TIPO_COMERCIO', null=True)),
            ],
            options={
                'db_table': 'EMPRESA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encuesta',
            fields=[
                ('idencuesta', models.AutoField(db_column='IDENCUESTA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('fecha_inicio', models.DateField(blank=True, db_column='FECHA_INICIO', null=True)),
                ('fecha_cierre', models.DateField(blank=True, db_column='FECHA_CIERRE', null=True)),
            ],
            options={
                'db_table': 'ENCUESTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Encuestado',
            fields=[
                ('idencuestado', models.AutoField(db_column='IDENCUESTADO', primary_key=True, serialize=False)),
                ('detalle', models.CharField(blank=True, db_column='DETALLE', max_length=250, null=True)),
                ('residencia', models.CharField(blank=True, db_column='RESIDENCIA', max_length=150, null=True)),
                ('estado_registro', models.CharField(blank=True, db_column='ESTADO_REGISTRO', db_comment='CE:CERRADO/PE:PENDIENTE\nEstado registro de la encuesta', max_length=2, null=True)),
            ],
            options={
                'db_table': 'ENCUESTADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Espacio',
            fields=[
                ('idespacio', models.AutoField(db_column='IDESPACIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', db_comment='DIRIGIDO A, CONDICIONES, ECT.', max_length=250, null=True)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', db_comment='LD1:LOZA DEPORTIVA/GYM:GIMNACIO/PC1:PISCINA GRANDE/PC2:PISCINA PEQUEÐA', max_length=45, null=True)),
            ],
            options={
                'db_table': 'ESPACIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstacionTrabajo',
            fields=[
                ('idestaciontrabajo', models.AutoField(db_column='IDESTACIONTRABAJO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=45, null=True)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=45, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('observacion', models.CharField(blank=True, db_column='OBSERVACION', max_length=45, null=True)),
            ],
            options={
                'db_table': 'ESTACION_TRABAJO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hisclaves',
            fields=[
                ('idhisclave', models.AutoField(db_column='IDHISCLAVE', primary_key=True, serialize=False)),
                ('hashclave', models.CharField(blank=True, db_column='HASHCLAVE', max_length=32, null=True)),
                ('syscreacion', models.DateTimeField(blank=True, db_column='SYSCREACION', null=True)),
            ],
            options={
                'db_table': 'HISCLAVES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Historiaclinica',
            fields=[
                ('idhistoriaclinica', models.AutoField(db_column='IDHISTORIACLINICA', primary_key=True, serialize=False)),
                ('fecharegistro', models.DateTimeField(blank=True, db_column='FECHAREGISTRO', null=True)),
                ('tipo_sangre', models.CharField(blank=True, db_column='TIPO_SANGRE', max_length=4, null=True)),
            ],
            options={
                'db_table': 'HISTORIACLINICA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inscripcion',
            fields=[
                ('idinscripcion', models.AutoField(db_column='IDINSCRIPCION', primary_key=True, serialize=False)),
                ('fecha_matricula', models.DateField(blank=True, db_column='FECHA_MATRICULA', db_comment='fecha de cuadno se realizo la matricula', null=True)),
                ('peso', models.CharField(blank=True, db_column='PESO', db_comment='peso del menor', max_length=3, null=True)),
                ('talla', models.CharField(blank=True, db_column='TALLA', db_comment='talla del menor', max_length=4, null=True)),
                ('seguro_medico', models.IntegerField(blank=True, db_column='SEGURO_MEDICO', db_comment='┐cuenta con seguro medico?\nsi:1\nno:0 ', null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', db_comment='correo electronico del menor', max_length=45, null=True)),
                ('n_recibo', models.CharField(blank=True, db_column='N_RECIBO', db_comment='numero del recibo de pago de la matricula del menor', max_length=45, null=True)),
                ('observacion', models.CharField(blank=True, db_column='OBSERVACION', db_comment='obervacion ', max_length=45, null=True)),
                ('autorizacion', models.IntegerField(blank=True, db_column='AUTORIZACION', db_comment='┐tiene autoruzacion?\nsi:1\nno:0 ', null=True)),
            ],
            options={
                'db_table': 'INSCRIPCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Inspeccion',
            fields=[
                ('idinspeccion', models.AutoField(db_column='IDINSPECCION', primary_key=True, serialize=False)),
                ('objeto_inspeccion', models.CharField(db_column='OBJETO_INSPECCION', db_comment='{IDVEHICULO: 20, IDPERSONAL:10, TIPO_OBJETO: 2}', max_length=245)),
                ('fotos', models.CharField(blank=True, db_column='FOTOS', db_comment='[{"idDocAdjunto":103},{"idDocAdjunto":104}]', max_length=345, null=True)),
                ('fecha_inspeccion', models.DateField(blank=True, db_column='FECHA_INSPECCION', null=True)),
                ('hora_inspeccion', models.TimeField(blank=True, db_column='HORA_INSPECCION', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('valor', models.IntegerField(blank=True, db_column='VALOR', null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=355, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'INSPECCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InspeccionCabecera',
            fields=[
                ('idinspeccioncabecera', models.AutoField(db_column='IDINSPECCIONCABECERA', primary_key=True, serialize=False)),
                ('fecha_inspeccion', models.DateTimeField(blank=True, db_column='FECHA_INSPECCION', null=True)),
                ('tipo_inspeccion', models.IntegerField(blank=True, db_column='TIPO_INSPECCION', null=True)),
                ('idsupervisor', models.IntegerField(blank=True, db_column='IDSUPERVISOR', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('observacion', models.CharField(blank=True, db_column='OBSERVACION', max_length=445, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('offline', models.IntegerField(blank=True, db_column='OFFLINE', null=True)),
                ('idempresaproveedor', models.IntegerField(blank=True, db_column='IDEMPRESAPROVEEDOR', null=True)),
            ],
            options={
                'db_table': 'INSPECCION_CABECERA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InspeccionPersonal',
            fields=[
                ('idinspeccionpersonal', models.AutoField(db_column='IDINSPECCIONPERSONAL', primary_key=True, serialize=False)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('fotos', models.CharField(blank=True, db_column='FOTOS', max_length=845, null=True)),
                ('idpersonalinspeccion', models.IntegerField(blank=True, db_column='IDPERSONALINSPECCION', db_comment='PERSONAL ', null=True)),
                ('hora', models.TimeField(blank=True, db_column='HORA', null=True)),
                ('valor', models.CharField(blank=True, db_column='VALOR', max_length=45, null=True)),
                ('estado_valor', models.CharField(blank=True, db_column='ESTADO_VALOR', max_length=45, null=True)),
                ('parametro_valor', models.CharField(blank=True, db_column='PARAMETRO_VALOR', max_length=45, null=True)),
                ('foto_descriptiva', models.CharField(blank=True, db_column='FOTO_DESCRIPTIVA', max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=345, null=True)),
                ('vehiculos', models.CharField(blank=True, db_column='VEHICULOS', max_length=450, null=True)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, db_column='FECHA_ACTUALIZACION', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('offline', models.IntegerField(blank=True, db_column='OFFLINE', null=True)),
            ],
            options={
                'db_table': 'INSPECCION_PERSONAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Insumo',
            fields=[
                ('idinsumo', models.AutoField(db_column='IDINSUMO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=245, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=445, null=True)),
                ('cantidad', models.DecimalField(blank=True, db_column='CANTIDAD', decimal_places=0, max_digits=2, null=True)),
                ('unidad', models.CharField(blank=True, db_column='UNIDAD', db_comment='KG, SACO, CAJAS, ETC', max_length=45, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'INSUMO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('idlocal', models.AutoField(db_column='IDLOCAL', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=45, null=True)),
                ('tipo_local', models.CharField(blank=True, db_column='TIPO_LOCAL', max_length=145, null=True)),
            ],
            options={
                'db_table': 'LOCAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogConexion',
            fields=[
                ('idlogconexion', models.AutoField(db_column='IDLOGCONEXION', primary_key=True, serialize=False)),
                ('uuid', models.CharField(blank=True, db_column='UUID', max_length=500, null=True)),
                ('info', models.CharField(blank=True, db_column='INFO', max_length=800, null=True)),
                ('bateria', models.CharField(blank=True, db_column='BATERIA', max_length=500, null=True)),
                ('idusuario', models.IntegerField(blank=True, db_column='IDUSUARIO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fecha_conexion', models.DateTimeField(blank=True, db_column='FECHA_CONEXION', null=True)),
            ],
            options={
                'db_table': 'LOG_CONEXION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Login',
            fields=[
                ('idlogin', models.AutoField(db_column='IDLOGIN', primary_key=True, serialize=False)),
                ('access_token', models.TextField(blank=True, db_column='ACCESS_TOKEN', null=True)),
                ('expires_in', models.IntegerField(blank=True, db_column='EXPIRES_IN', null=True)),
                ('iat_in', models.IntegerField(blank=True, db_column='IAT_IN', db_comment='TIEMPO DE INICIO DE LOGIN', null=True)),
                ('token_type', models.CharField(blank=True, db_column='TOKEN_TYPE', max_length=8, null=True)),
                ('scope', models.CharField(blank=True, db_column='SCOPE', max_length=45, null=True)),
                ('refresh_token', models.TextField(blank=True, db_column='REFRESH_TOKEN', null=True)),
                ('fecha_ingreso', models.DateTimeField(blank=True, db_column='FECHA_INGRESO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('tipo_acceso', models.CharField(blank=True, db_column='TIPO_ACCESO', db_comment='FACEBOOK\nGOOGLE\nNORMAL', max_length=45, null=True)),
                ('nro_ingresos', models.IntegerField(blank=True, db_column='NRO_INGRESOS', null=True)),
            ],
            options={
                'db_table': 'LOGIN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Medicamento',
            fields=[
                ('idmedicamento', models.AutoField(db_column='IDMEDICAMENTO', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=10, null=True)),
                ('anemia_ninos', models.CharField(blank=True, db_column='ANEMIA_NINOS', db_comment='S:HABILITAR/N:NO HABILITAR', max_length=1, null=True)),
                ('anemia_gestante', models.CharField(blank=True, db_column='ANEMIA_GESTANTE', db_comment='S:HABILITAR/N:NO HABILITAR', max_length=1, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=255, null=True)),
                ('concentracion', models.CharField(blank=True, db_column='CONCENTRACION', max_length=255, null=True)),
                ('forma_farm', models.CharField(blank=True, db_column='FORMA_FARM', max_length=150, null=True)),
                ('forma_farm_simplificada', models.CharField(blank=True, db_column='FORMA_FARM_SIMPLIFICADA', max_length=150, null=True)),
                ('presentacion', models.CharField(blank=True, db_column='PRESENTACION', max_length=255, null=True)),
                ('ingredientes_activos', models.CharField(blank=True, db_column='INGREDIENTES_ACTIVOS', max_length=4900, null=True)),
            ],
            options={
                'db_table': 'MEDICAMENTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('idmenu', models.AutoField(db_column='IDMENU', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', db_comment=' EJEMPLO 001.00.000:Sistema, 001.01.000:M¾dulo, 001.01.001:Opci¾n,', max_length=15, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=50, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=445, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=150, null=True)),
                ('icono', models.CharField(blank=True, db_column='ICONO', max_length=150, null=True)),
                ('fechacreacion', models.DateTimeField(blank=True, db_column='FECHACREACION', null=True)),
                ('fechaactualizacion', models.DateTimeField(blank=True, db_column='FECHAACTUALIZACION', null=True)),
                ('funcion', models.CharField(blank=True, db_column='FUNCION', max_length=255, null=True)),
                ('nroparametros', models.IntegerField(blank=True, db_column='NROPARAMETROS', null=True)),
                ('route', models.CharField(blank=True, db_column='ROUTE', db_comment='GET, POST, PUT, DELETE,  OPTIONS, PATCH, Any, Custom', max_length=20, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='P:Pendiente/A:Activo/I:Inactivo/B:Baja', null=True)),
                ('middleware', models.IntegerField(blank=True, db_column='MIDDLEWARE', db_comment='Libre/Login', null=True)),
            ],
            options={
                'db_table': 'MENU',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modulos',
            fields=[
                ('idmodulo', models.AutoField(db_column='IDMODULO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('nombre_corto', models.CharField(blank=True, db_column='NOMBRE_CORTO', max_length=50, null=True)),
                ('ruta', models.CharField(blank=True, db_column='RUTA', max_length=255, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'MODULOS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Objacceso',
            fields=[
                ('idobjacceso', models.AutoField(db_column='IDOBJACCESO', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=50, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('ruta', models.CharField(blank=True, db_column='RUTA', max_length=255, null=True)),
                ('controlador', models.CharField(blank=True, db_column='CONTROLADOR', max_length=255, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('middleware', models.IntegerField(blank=True, db_column='MIDDLEWARE', null=True)),
            ],
            options={
                'db_table': 'OBJACCESO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obra',
            fields=[
                ('idobra', models.AutoField(db_column='IDOBRA', primary_key=True, serialize=False)),
                ('financiamiento', models.CharField(blank=True, db_column='FINANCIAMIENTO', db_comment='Tabla de tablas cod:', max_length=4, null=True)),
                ('inversion', models.CharField(blank=True, db_column='INVERSION', max_length=150, null=True)),
                ('modalidad_ejecucion', models.CharField(blank=True, db_column='MODALIDAD_EJECUCION', max_length=50, null=True)),
                ('nombre_proyecto', models.CharField(blank=True, db_column='NOMBRE_PROYECTO', max_length=250, null=True)),
                ('nombre_abreviado', models.CharField(blank=True, db_column='NOMBRE_ABREVIADO', max_length=50, null=True)),
                ('ambito_intervencion', models.CharField(blank=True, db_column='AMBITO_INTERVENCION', db_comment='COORDENADAS ... GEOREFERENCIACION', max_length=250, null=True)),
                ('fecha_inicio', models.DateField(blank=True, db_column='FECHA_INICIO', null=True)),
                ('fecha_culminacion', models.DateField(blank=True, db_column='FECHA_CULMINACION', null=True)),
            ],
            options={
                'db_table': 'OBRA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('idopinion', models.IntegerField(db_column='IDOPINION', primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', db_comment='RECLAMO/SUGERENCIA/COMENTARIO', max_length=1, null=True)),
                ('titulo', models.CharField(blank=True, db_column='TITULO', max_length=45, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=445, null=True)),
                ('valoracion', models.DecimalField(blank=True, db_column='VALORACION', decimal_places=0, max_digits=2, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'OPINION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pagina',
            fields=[
                ('idpagina', models.AutoField(db_column='IDPAGINA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=245, null=True)),
                ('url', models.CharField(blank=True, db_column='URL', max_length=645, null=True)),
                ('titulo', models.TextField(blank=True, db_column='TITULO', null=True)),
                ('resumen', models.TextField(blank=True, db_column='RESUMEN', null=True)),
                ('contenido', models.TextField(blank=True, db_column='CONTENIDO', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('idusuariocreacion', models.IntegerField(blank=True, db_column='IDUSUARIOCREACION', null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('idusuarioactualizacion', models.IntegerField(blank=True, db_column='IDUSUARIOACTUALIZACION', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'PAGINA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('idpago', models.AutoField(db_column='IDPAGO', primary_key=True, serialize=False)),
                ('fecha_pago', models.DateTimeField(blank=True, db_column='FECHA_PAGO', null=True)),
                ('monto', models.DecimalField(blank=True, db_column='MONTO', decimal_places=2, max_digits=6, null=True)),
                ('codigo_pago', models.CharField(blank=True, db_column='CODIGO_PAGO', max_length=60, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='V:VERIFICACION/O:OK', max_length=1, null=True)),
            ],
            options={
                'db_table': 'PAGO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('idpais', models.AutoField(db_column='IDPAIS', primary_key=True, serialize=False)),
                ('iso', models.CharField(blank=True, db_column='ISO', max_length=2, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=80, null=True)),
                ('isban', models.IntegerField(blank=True, db_column='ISBAN', null=True)),
                ('idioma', models.CharField(blank=True, db_column='IDIOMA', max_length=60, null=True)),
                ('prefijo_tel', models.CharField(blank=True, db_column='PREFIJO_TEL', max_length=4, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PAIS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('idpedido', models.AutoField(db_column='IDPEDIDO', primary_key=True, serialize=False)),
                ('costo', models.DecimalField(blank=True, db_column='COSTO', decimal_places=0, max_digits=5, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
                ('total', models.DecimalField(blank=True, db_column='TOTAL', decimal_places=0, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'PEDIDO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('idpersona', models.AutoField(db_column='IDPERSONA', primary_key=True, serialize=False)),
                ('tipodocumento', models.IntegerField(blank=True, db_column='TIPODOCUMENTO', null=True)),
                ('nrodocumento', models.CharField(blank=True, db_column='NRODOCUMENTO', max_length=15, null=True)),
                ('nombres', models.CharField(blank=True, db_column='NOMBRES', max_length=150, null=True)),
                ('apellido_paterno', models.CharField(blank=True, db_column='APELLIDO_PATERNO', max_length=120, null=True)),
                ('apellido_materno', models.CharField(blank=True, db_column='APELLIDO_MATERNO', max_length=120, null=True)),
                ('foto', models.CharField(blank=True, db_column='FOTO', max_length=330, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, db_column='FECHA_NACIMIENTO', null=True)),
                ('genero', models.IntegerField(blank=True, db_column='GENERO', db_comment='M:MASCULINO/F:FEMENINO', null=True)),
                ('creador_registro', models.IntegerField(blank=True, db_column='CREADOR_REGISTRO', null=True)),
                ('systema', models.CharField(blank=True, db_column='SYSTEMA', max_length=10, null=True)),
                ('tipo_persona', models.IntegerField(blank=True, db_column='TIPO_PERSONA', db_comment='Natural / Juridica', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='Son restricciones: no vivo / restriccion legal /', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PERSONA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonaContacto',
            fields=[
                ('idcontacto', models.AutoField(db_column='IDCONTACTO', primary_key=True, serialize=False)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', db_comment='T:TELEFONO / C:CORREO / D:DIRECCION ', max_length=20, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=120, null=True)),
                ('descripcion_corta', models.CharField(blank=True, db_column='DESCRIPCION_CORTA', max_length=20, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='V:VERIFICACION / A:ALTA / B:BAJA', max_length=1, null=True)),
            ],
            options={
                'db_table': 'PERSONA_CONTACTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('idpersonal', models.AutoField(db_column='IDPERSONAL', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=10, null=True)),
                ('fecha_ingreso', models.DateField(blank=True, db_column='FECHA_INGRESO', null=True)),
                ('fecha_finalizacion', models.DateField(blank=True, db_column='FECHA_FINALIZACION', null=True)),
                ('nrolicencia', models.CharField(blank=True, db_column='NROLICENCIA', max_length=11, null=True)),
                ('catlicencia', models.CharField(blank=True, db_column='CATLICENCIA', max_length=11, null=True)),
                ('fecha_emision_licencia', models.DateField(blank=True, db_column='FECHA_EMISION_LICENCIA', null=True)),
                ('fecha_caducidad_licencia', models.DateField(blank=True, db_column='FECHA_CADUCIDAD_LICENCIA', null=True)),
                ('foto', models.IntegerField(blank=True, db_column='FOTO', db_comment='EXTRAE TABLA DOCADJUNTO', null=True)),
                ('cargo', models.IntegerField(blank=True, db_column='CARGO', db_comment='Lista de cargos: IDCATALOGOTABLAS=35', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='19: ACTIVO / 20: INACTIVO', null=True)),
            ],
            options={
                'db_table': 'PERSONAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantillaWeb',
            fields=[
                ('idplantilla', models.AutoField(db_column='IDPLANTILLA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', db_comment='nombre del template el cual se convertira en un componente de angular', max_length=255)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=255, null=True)),
            ],
            options={
                'db_table': 'PLANTILLA_WEB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plato',
            fields=[
                ('idplato', models.AutoField(db_column='IDPLATO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=145, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=545, null=True)),
                ('precio', models.CharField(blank=True, db_column='PRECIO', max_length=45, null=True)),
                ('valoracion', models.DecimalField(blank=True, db_column='VALORACION', decimal_places=0, max_digits=2, null=True)),
                ('tiempo_preparacion', models.TimeField(blank=True, db_column='TIEMPO_PREPARACION', null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=1, null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, db_column='FECHA_ACTUALIZACION', null=True)),
            ],
            options={
                'db_table': 'PLATO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pregunta',
            fields=[
                ('idpregunta', models.AutoField(db_column='IDPREGUNTA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=250, null=True)),
                ('tipo_pregunta', models.CharField(blank=True, db_column='TIPO_PREGUNTA', db_comment='01:ABIERTA/02:CERRADA/03:MIXTA', max_length=2, null=True)),
                ('tipo_respuesta', models.CharField(blank=True, db_column='TIPO_RESPUESTA', db_comment='01:UNICA/02:MULTIPLE/03:MULTIPLE RESTRICCION', max_length=2, null=True)),
                ('max_select', models.IntegerField(blank=True, db_column='MAX_SELECT', null=True)),
            ],
            options={
                'db_table': 'PREGUNTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Prestacion',
            fields=[
                ('idprestacion', models.AutoField(db_column='IDPRESTACION', primary_key=True, serialize=False)),
                ('fechahora_prestacion', models.CharField(blank=True, db_column='FECHAHORA_PRESTACION', max_length=45, null=True)),
                ('hemoglobina', models.DecimalField(blank=True, db_column='HEMOGLOBINA', decimal_places=2, max_digits=4, null=True)),
                ('diagnostico', models.CharField(blank=True, db_column='DIAGNOSTICO', db_comment='A: anemia/N:No tiene anemia/O:otro', max_length=1, null=True)),
            ],
            options={
                'db_table': 'PRESTACION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProfProgram',
            fields=[
                ('idprofprog', models.AutoField(db_column='IDPROFPROG', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'PROF_PROGRAM',
                'db_table_comment': 'Personal (profesores) encargado para desarrollar la activida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('idproveedor', models.AutoField(db_column='IDPROVEEDOR', primary_key=True, serialize=False)),
                ('ruc', models.CharField(blank=True, db_column='RUC', max_length=11, null=True)),
                ('nombre_razonsocial', models.CharField(blank=True, db_column='NOMBRE_RAZONSOCIAL', max_length=250, null=True)),
            ],
            options={
                'db_table': 'PROVEEDOR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Provincia',
            fields=[
                ('idprovincia', models.CharField(db_column='IDPROVINCIA', max_length=6, primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=145, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'PROVINCIA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegInsactividad',
            fields=[
                ('idreginsactividad', models.AutoField(db_column='IDREGINSACTIVIDAD', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'REG_INSACTIVIDAD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReporteAvance',
            fields=[
                ('idreporte', models.AutoField(db_column='IDREPORTE', primary_key=True, serialize=False)),
                ('tipo_reporte', models.CharField(blank=True, db_column='TIPO_REPORTE', db_comment='PU:Publico/IN:Interna', max_length=2, null=True)),
                ('fecha_reporte', models.DateField(blank=True, db_column='FECHA_REPORTE', null=True)),
                ('finan_tipo_moneda', models.CharField(blank=True, db_column='FINAN_TIPO_MONEDA', db_comment='USD:DOLARES AMERICANOS/PEN:Soles peruano (ISO 4217)', max_length=3, null=True)),
                ('finan_importe', models.DecimalField(blank=True, db_column='FINAN_IMPORTE', decimal_places=2, max_digits=10, null=True)),
                ('avance_fisico', models.DecimalField(blank=True, db_column='AVANCE_FISICO', db_comment='AVANCE FISICO EN PORCENTAJE', decimal_places=2, max_digits=5, null=True)),
                ('estado_proyecto', models.CharField(blank=True, db_column='ESTADO_PROYECTO', db_comment='Estados de proyecto jalar de tabla tablas cod: ', max_length=4, null=True)),
                ('controversia', models.CharField(blank=True, db_column='CONTROVERSIA', db_comment='CO:Conciliaci¾n/AR:Arbitraje/PJ:Proceso Judicial', max_length=2, null=True)),
            ],
            options={
                'db_table': 'REPORTE_AVANCE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequicitoInspeccion',
            fields=[
                ('idrequicitoinspeccion', models.AutoField(db_column='IDREQUICITOINSPECCION', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=200, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=445, null=True)),
                ('idtipoobjetoinspeccion', models.IntegerField(blank=True, db_column='IDTIPOOBJETOINSPECCION', null=True)),
                ('orden', models.IntegerField(blank=True, db_column='ORDEN', null=True)),
            ],
            options={
                'db_table': 'REQUICITO_INSPECCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Responsable',
            fields=[
                ('iddocente', models.AutoField(db_column='IDDOCENTE', primary_key=True, serialize=False)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='A: activo / I: inactivo', max_length=1, null=True)),
                ('tipo_responsable', models.CharField(blank=True, db_column='TIPO_RESPONSABLE', db_comment='PFP:PRofesor principal/PF1:PRofesor alterno 1/PF1:PRofesor Alterno 2/AS1:Asistente/', max_length=3, null=True)),
            ],
            options={
                'db_table': 'RESPONSABLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Respuesta',
            fields=[
                ('idrespuesta', models.AutoField(db_column='IDRESPUESTA', primary_key=True, serialize=False)),
                ('valor', models.CharField(blank=True, db_column='VALOR', max_length=1, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', db_comment='NOMBRE DE ERESPUESTA', max_length=250, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
            ],
            options={
                'db_table': 'RESPUESTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('idrol', models.AutoField(db_column='IDROL', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=50, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=150, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='AC:ACTIVO/IN:INACTIVO/BL:BLOQUEADO', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ROL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('idsector', models.AutoField(db_column='IDSECTOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=250, null=True)),
                ('abreviatura', models.CharField(blank=True, db_column='ABREVIATURA', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SECTOR',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seguro',
            fields=[
                ('idseguro', models.AutoField(db_column='IDSEGURO', primary_key=True, serialize=False)),
                ('tipo_seguro', models.CharField(blank=True, db_column='TIPO_SEGURO', max_length=45, null=True)),
                ('cobertura', models.FloatField(blank=True, db_column='COBERTURA', null=True)),
                ('monto', models.FloatField(blank=True, db_column='MONTO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'SEGURO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('idservicio', models.AutoField(db_column='IDSERVICIO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=250, null=True)),
            ],
            options={
                'db_table': 'SERVICIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sistema',
            fields=[
                ('idsistema', models.AutoField(db_column='IDSISTEMA', primary_key=True, serialize=False)),
                ('tipo_sistema', models.CharField(blank=True, db_column='TIPO_SISTEMA', db_comment='WB:WEB/CS:CLIENTE SERVIDOR', max_length=2, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=250, null=True)),
                ('nombre_corto', models.CharField(blank=True, db_column='NOMBRE_CORTO', max_length=50, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='19: ACTIVO/ 20: INACTIVO', null=True)),
                ('ruta', models.CharField(blank=True, db_column='RUTA', max_length=255, null=True)),
            ],
            options={
                'db_table': 'SISTEMA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TabTablas',
            fields=[
                ('idtabla', models.AutoField(db_column='IDTABLA', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=10, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=50, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=150, null=True)),
                ('estado', models.PositiveIntegerField(db_column='ESTADO', db_comment='A:Activo/I:Inactivo')),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('fecha_actualizacion', models.DateTimeField(blank=True, db_column='FECHA_ACTUALIZACION', null=True)),
                ('cod_element1', models.CharField(blank=True, db_column='COD_ELEMENT1', max_length=6, null=True)),
                ('cod_elem1_tipo', models.CharField(blank=True, db_column='COD_ELEM1_TIPO', max_length=10, null=True)),
                ('referencia1', models.CharField(blank=True, db_column='REFERENCIA1', max_length=50, null=True)),
                ('referencia2', models.CharField(blank=True, db_column='REFERENCIA2', max_length=50, null=True)),
                ('referencia3', models.CharField(blank=True, db_column='REFERENCIA3', max_length=50, null=True)),
                ('valdat_lon_min', models.IntegerField(blank=True, db_column='VALDAT_LON_MIN', null=True)),
                ('valdat_lon_max', models.IntegerField(blank=True, db_column='VALDAT_LON_MAX', null=True)),
                ('valdat_tipo', models.CharField(blank=True, db_column='VALDAT_TIPO', db_comment='NUMERICO\nALFANUMERICO', max_length=20, null=True)),
            ],
            options={
                'db_table': 'TAB_TABLAS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('idticket', models.AutoField(db_column='IDTICKET', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=45, null=True)),
                ('fecha_hora_emision', models.DateTimeField(blank=True, db_column='FECHA_HORA_EMISION', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('prioridad', models.IntegerField(blank=True, db_column='PRIORIDAD', null=True)),
                ('tipo_atencion', models.IntegerField(blank=True, db_column='TIPO_ATENCION', null=True)),
                ('hora_inicio', models.DateTimeField(blank=True, db_column='HORA_INICIO', null=True)),
                ('hora_fin', models.DateTimeField(blank=True, db_column='HORA_FIN', null=True)),
                ('observaciones', models.CharField(blank=True, db_column='OBSERVACIONES', max_length=245, null=True)),
            ],
            options={
                'db_table': 'TICKET',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoContacto',
            fields=[
                ('idtipocontacto', models.AutoField(db_column='IDTIPOCONTACTO', primary_key=True, serialize=False)),
                ('tipo', models.IntegerField(blank=True, db_column='TIPO', db_comment='TELEFONO/RADIO/CELULAR/CORREO', null=True)),
                ('numero', models.CharField(blank=True, db_column='NUMERO', max_length=45, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('estado_principal', models.IntegerField(blank=True, db_column='ESTADO_PRINCIPAL', null=True)),
            ],
            options={
                'db_table': 'TIPO_CONTACTO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnidadEjecutora',
            fields=[
                ('idunidadejecutora', models.AutoField(db_column='IDUNIDADEJECUTORA', primary_key=True, serialize=False)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=150, null=True)),
                ('abreviatura', models.CharField(blank=True, db_column='ABREVIATURA', max_length=250, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO', max_length=1, null=True)),
            ],
            options={
                'db_table': 'UNIDAD_EJECUTORA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnidadOrganica',
            fields=[
                ('idunidadorganica', models.AutoField(db_column='IDUNIDADORGANICA', primary_key=True, serialize=False)),
                ('codigo', models.CharField(blank=True, db_column='CODIGO', max_length=10, null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=100, null=True)),
                ('nombre_corto', models.CharField(blank=True, db_column='NOMBRE_CORTO', max_length=50, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=250, null=True)),
                ('direccion', models.CharField(blank=True, db_column='DIRECCION', max_length=150, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='P:PENDIENT/A:ACTIVO/I:INACTIVO/B:BAJA', max_length=1, null=True)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', db_comment='UO:ES UNIDAD ORGANICA/OP:ES OPD\n', max_length=2, null=True)),
            ],
            options={
                'db_table': 'UNIDAD_ORGANICA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('idusuario', models.AutoField(db_column='IDUSUARIO', primary_key=True, serialize=False)),
                ('usuario', models.CharField(blank=True, db_column='USUARIO', max_length=100, null=True)),
                ('clave', models.CharField(blank=True, db_column='CLAVE', max_length=250, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO/B:BLOQUEADO', null=True)),
                ('baja', models.IntegerField(blank=True, db_column='BAJA', null=True)),
                ('nrointentos', models.IntegerField(blank=True, db_column='NROINTENTOS', null=True)),
                ('alias', models.CharField(blank=True, db_column='ALIAS', max_length=80, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=150, null=True)),
                ('idusuariocreacion', models.IntegerField(db_column='IDUSUARIOCREACION')),
            ],
            options={
                'db_table': 'USUARIO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vehiculo',
            fields=[
                ('idvehiculo', models.AutoField(db_column='IDVEHICULO', primary_key=True, serialize=False)),
                ('placa', models.CharField(blank=True, db_column='PLACA', max_length=45, null=True)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', max_length=45, null=True)),
                ('marca', models.CharField(blank=True, db_column='MARCA', max_length=245, null=True)),
                ('anio_fabricacion', models.IntegerField(blank=True, db_column='ANIO_FABRICACION', null=True)),
                ('modelo', models.CharField(blank=True, db_column='MODELO', max_length=245, null=True)),
                ('color', models.CharField(blank=True, db_column='COLOR', max_length=45, null=True)),
                ('foto', models.CharField(blank=True, db_column='FOTO', max_length=245, null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
            ],
            options={
                'db_table': 'VEHICULO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Victima',
            fields=[
                ('idvictima', models.AutoField(db_column='IDVICTIMA', primary_key=True, serialize=False)),
                ('ingreso_economico', models.FloatField(blank=True, db_column='INGRESO_ECONOMICO', null=True)),
                ('tipo_seguro', models.IntegerField(blank=True, db_column='TIPO_SEGURO', null=True)),
                ('estado_salud', models.IntegerField(blank=True, db_column='ESTADO_SALUD', db_comment='0: BIEN / 1: MAL', null=True)),
                ('carga_familiar', models.CharField(blank=True, db_column='CARGA_FAMILIAR', max_length=45, null=True)),
            ],
            options={
                'db_table': 'VICTIMA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VinculoEmpresa',
            fields=[
                ('idvinculoempresa', models.AutoField(db_column='IDVINCULOEMPRESA', primary_key=True, serialize=False)),
                ('tipo_vinculo', models.IntegerField(blank=True, db_column='TIPO_VINCULO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'VINCULO_EMPRESA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vivienda',
            fields=[
                ('idvivienda', models.AutoField(db_column='IDVIVIENDA', db_comment='ID de la tabla VIVIENDA.', primary_key=True, serialize=False)),
                ('piso', models.CharField(blank=True, db_column='PISO', db_comment='Piso en el que se encuentra la vivienda.', max_length=10, null=True)),
                ('block', models.CharField(blank=True, db_column='BLOCK', db_comment='Bloque en la que se encuentra la vivienda.', max_length=10, null=True)),
                ('urbanizacion', models.CharField(blank=True, db_column='URBANIZACION', db_comment='Urbanizaci¾n a la que pertenece la vivienda.', max_length=60, null=True)),
                ('condicion', models.CharField(blank=True, db_column='CONDICION', db_comment='Si es Propia o Alquilada.', max_length=20, null=True)),
                ('agua_potable', models.CharField(blank=True, db_column='AGUA_POTABLE', db_comment='Si cuenta con Agua potable su valor serß SI, de lo contrario serß NO.', max_length=5, null=True)),
                ('ubigeo', models.CharField(blank=True, db_column='UBIGEO', db_comment='Ubigeo de la vivienda.', max_length=6, null=True)),
                ('direccion', models.CharField(blank=True, db_column='DIRECCION', db_comment='Direcci¾n de la vivienda.', max_length=150, null=True)),
                ('referencia', models.CharField(blank=True, db_column='REFERENCIA', db_comment='Referencia de la vivienda.', max_length=250, null=True)),
                ('longitud', models.CharField(blank=True, db_column='LONGITUD', max_length=20, null=True)),
                ('latitud', models.CharField(blank=True, db_column='LATITUD', max_length=20, null=True)),
            ],
            options={
                'db_table': 'VIVIENDA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Acceso',
            fields=[
                ('idrol', models.OneToOneField(db_column='IDROL', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.rol')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO/P:PENDIENTE/', null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ACCESO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ActividadCentro',
            fields=[
                ('idactividad', models.OneToOneField(db_column='IDACTIVIDAD', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.actividad')),
            ],
            options={
                'db_table': 'ACTIVIDAD_CENTRO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CasoAbogado',
            fields=[
                ('idcaso', models.OneToOneField(db_column='IDCASO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.caso')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'CASO_ABOGADO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CasoPersonal',
            fields=[
                ('caso_idcaso', models.OneToOneField(db_column='CASO_IDCASO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.caso')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'CASO_PERSONAL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CasoVictima',
            fields=[
                ('idcaso', models.OneToOneField(db_column='IDCASO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.caso')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'CASO_VICTIMA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('idproveedor', models.OneToOneField(db_column='IDPROVEEDOR', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.proveedor')),
                ('contrato_numero', models.CharField(blank=True, db_column='CONTRATO_NUMERO', max_length=20, null=True)),
                ('contrato_fecha', models.DateField(blank=True, db_column='CONTRATO_FECHA', null=True)),
                ('tipo_moneda', models.CharField(blank=True, db_column='TIPO_MONEDA', db_comment='SEGUN ISO', max_length=3, null=True)),
                ('contrato_monto', models.DecimalField(blank=True, db_column='CONTRATO_MONTO', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'CONTRATO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Detalle',
            fields=[
                ('idplato', models.OneToOneField(db_column='IDPLATO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.plato')),
            ],
            options={
                'db_table': 'DETALLE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EncuestaPregunta',
            fields=[
                ('idencuesta', models.OneToOneField(db_column='IDENCUESTA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.encuesta')),
                ('orden', models.IntegerField(blank=True, db_column='ORDEN', null=True)),
            ],
            options={
                'db_table': 'ENCUESTA_PREGUNTA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Enrrolla',
            fields=[
                ('idempresa', models.OneToOneField(db_column='IDEMPRESA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.empresa')),
                ('fecha_registro', models.DateTimeField(blank=True, db_column='FECHA_REGISTRO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'ENRROLLA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntregaMedicamentos',
            fields=[
                ('idprestacion', models.OneToOneField(db_column='IDPRESTACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.prestacion')),
                ('unidades', models.IntegerField(blank=True, db_column='UNIDADES', null=True)),
                ('cantidad_total', models.DecimalField(blank=True, db_column='CANTIDAD_TOTAL', db_comment='CAJA TOTAL CAPSULA(UNIDAD-ENTERO)/ FRASCO TOTAL ( MILILITROS-DECIMAL)', decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'db_table': 'ENTREGA_MEDICAMENTOS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permiso',
            fields=[
                ('idusuario', models.OneToOneField(db_column='IDUSUARIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.usuario')),
                ('tipo', models.CharField(blank=True, db_column='TIPO', db_comment='P:PERMITIDO/B:BLOQUEADO', max_length=1, null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO', max_length=1, null=True)),
                ('syscreacion', models.DateTimeField(blank=True, db_column='SYSCREACION', null=True)),
                ('sysactualizacion', models.DateTimeField(blank=True, db_column='SYSACTUALIZACION', null=True)),
            ],
            options={
                'db_table': 'PERMISO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonaDireccion',
            fields=[
                ('idpersona', models.OneToOneField(db_column='IDPERSONA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.persona')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('estado_principal', models.IntegerField(blank=True, db_column='ESTADO_PRINCIPAL', db_comment='0: NORMAL 1: PRINCIPAL', null=True)),
            ],
            options={
                'db_table': 'PERSONA_DIRECCION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PersonaVivienda',
            fields=[
                ('id_persona', models.OneToOneField(db_column='ID_PERSONA', db_comment='ID para identificar a la persona que habita en una determinada vivienda.', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.persona')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='Si es su domicilio actual el valro serß 1, de lo contrario serß 0.', null=True)),
            ],
            options={
                'db_table': 'PERSONA_VIVIENDA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlantillaComponente',
            fields=[
                ('idplantilla', models.OneToOneField(db_column='IDPLANTILLA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.plantillaweb')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('orden', models.IntegerField(blank=True, db_column='ORDEN', db_comment='VA EL ORDEN DE LOS COMPONENETES EN LA PLANTILLA', null=True)),
            ],
            options={
                'db_table': 'PLANTILLA_COMPONENTE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServicioCentro',
            fields=[
                ('idservicio', models.OneToOneField(db_column='IDSERVICIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.servicio')),
                ('estado', models.CharField(blank=True, db_column='ESTADO', db_comment='P:PENDIENTE/A:ACTIVO/I:INACTIVO/B:BAJA', max_length=1, null=True)),
            ],
            options={
                'db_table': 'SERVICIO_CENTRO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServicioPago',
            fields=[
                ('idservicio', models.OneToOneField(db_column='IDSERVICIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.servicio')),
                ('entrega_servicio', models.CharField(blank=True, db_column='ENTREGA_SERVICIO', db_comment='P:PENDIENTE/E:ENTREGADO', max_length=1, null=True)),
                ('cantidad', models.IntegerField(blank=True, db_column='CANTIDAD', db_comment='Si son varias, pago x varias personas, entradas, etc', null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', db_comment='Detalle del tipo de pago oa ctividad', max_length=150, null=True)),
                ('observacion', models.CharField(blank=True, db_column='OBSERVACION', max_length=150, null=True)),
                ('valor_unitario', models.DecimalField(blank=True, db_column='VALOR_UNITARIO', decimal_places=2, max_digits=7, null=True)),
                ('subtotal', models.DecimalField(blank=True, db_column='SUBTOTAL', decimal_places=2, max_digits=10, null=True)),
                ('prodasociado_id', models.IntegerField(blank=True, db_column='PRODASOCIADO_ID', db_comment='ID de ta bla asociada, ejemplo: cancha sera ID ACTIVIDAD_ESPACIO', null=True)),
                ('prodasociado_tipo', models.CharField(blank=True, db_column='PRODASOCIADO_TIPO', db_comment='Es la tabla asociada, ejemplo: para cancha ACTIVIDAD_ESPACIO', max_length=50, null=True)),
            ],
            options={
                'db_table': 'SERVICIO_PAGO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SistemaModulos',
            fields=[
                ('idsistema', models.OneToOneField(db_column='IDSISTEMA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.sistema')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'SISTEMA_MODULOS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supervision',
            fields=[
                ('idproveedor', models.OneToOneField(db_column='IDPROVEEDOR', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.proveedor')),
                ('cargo', models.CharField(blank=True, db_column='CARGO', db_comment='SU:Supervisor/IN:inspector', max_length=2, null=True)),
            ],
            options={
                'db_table': 'SUPERVISION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnidadOrganicaDependencia',
            fields=[
                ('idunidadorganica', models.OneToOneField(db_column='IDUNIDADORGANICA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.unidadorganica')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
                ('fecha_creacion', models.DateTimeField(blank=True, db_column='FECHA_CREACION', null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, db_column='FECHA_FIN', null=True)),
            ],
            options={
                'db_table': 'UNIDAD_ORGANICA_DEPENDENCIA',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('idusuario', models.OneToOneField(db_column='IDUSUARIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.usuario')),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', db_comment='A:ACTIVO/I:INACTIVO', null=True)),
                ('syscreacion', models.DateTimeField(blank=True, db_column='SYSCREACION', null=True)),
                ('sysactualizacion', models.DateTimeField(blank=True, db_column='SYSACTUALIZACION', null=True)),
            ],
            options={
                'db_table': 'USUARIO_ROL',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VictimaSeguro',
            fields=[
                ('idvictima', models.OneToOneField(db_column='IDVICTIMA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='core.victima')),
                ('monto_utilizado', models.FloatField(blank=True, db_column='MONTO_UTILIZADO', null=True)),
                ('estado', models.IntegerField(blank=True, db_column='ESTADO', null=True)),
            ],
            options={
                'db_table': 'VICTIMA_SEGURO',
                'managed': False,
            },
        ),
    ]
